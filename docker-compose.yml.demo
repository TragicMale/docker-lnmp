version: "3"
services:
  mysql:
    image: mysql:8
    restart: always
    container_name: mysql
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root
      # MYSQL_DATABASE: test
    networks:
      - dev
    ports:
      - "3306:3306"
    volumes:
      - "./data/mysql:/var/lib/mysql"
      - "./conf/mysql/mysqld.cnf:/etc/mysql/conf.d/mysqld.cnf"
    # command: 
      # --default_authentication_plugin=mysql_native_password
      # --character-set-server=utf8mb4
      # --collation-server=utf8mb4_unicode_ci
      # --default-time-zone=+8:00
      # --log-error=/var/lib/mysql/error.log
      # --slow_query_log=ON
      # --long_query_time=0.1
      # --slow_query_log_file=/var/lib/mysql/slow.log
  redis:
    image: redis:6
    restart: always
    container_name: redis
    environment:
      TZ: Asia/Shanghai
    networks:
      - dev
    ports:
      - "6379:6379"
    volumes:
      - "./data/redis:/data"
    command: --appendonly yes
    # --requirepass "root"
  php-fpm:
    # image: lachata/php-fpm:7.4
    build: container/php-fpm
    restart: always
    container_name: php-fpm
    networks:
      - dev
    ports:
      - "9000:9000"
    volumes:
      - ./conf/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      # - ./log/php:/usr/local/var/log
      - /home/user/xxx:/var/www/html/xxx
  nginx:
    image: nginx:stable
    restart: always
    container_name: nginx
    environment:
      TZ: Asia/Shanghai
    networks:
      - dev
    ports:
      - "80:80"
    volumes:
      - "./conf/nginx:/etc/nginx/conf.d:ro"
      - "./log/nginx:/var/log/nginx"
      - "/home/user/xxx:/usr/share/nginx/html/xxx:ro"
    depends_on:
      - php-fpm
  elasticsearch:
    image: lachata/elasticsearch:7.9.3
    restart: always
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    networks:
      - dev
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "./data/elasticsearch:/usr/share/elasticsearch/data"
      - "./log/elasticsearch:/usr/share/elasticsearch/logs"
  kibana:
    image: kibana:7.9.3
    restart: always
    container_name: kibana
    networks:
      - dev
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  mongo:
    image: mongo:4
    restart: always
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - "./data/mongo:/data/db"
    networks:
      - dev
    ports:
      - "5601:5601"
      - "27017:27017"
  mongo-express:
    image: mongo-express
    restart: always
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    networks:
      - dev
    ports:
      - "8081:8081"
    depends_on:
      - mongo
networks:
  dev:
